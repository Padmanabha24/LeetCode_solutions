1721. Swapping Nodes in a Linked List
You are given the head of a linked list, and an integer k.

Return the head of the linked list after swapping the values of the kth node from the beginning and the kth node from the end (the list is 1-indexed).
Input: head = [1,2,3,4,5], k = 2
Output: [1,4,3,2,5]
Example 2:

Input: head = [7,9,6,6,7,8,3,0,9,5], k = 5
Output: [7,9,6,6,8,7,3,0,9,5]
-------------------------------------------------------------------------------------------------------------------------------
**solution**
class Solution {
    public ListNode swapNodes(ListNode head, int k) {
        ListNode left=head;
        ListNode right=head;
       

        ListNode current=head;
        int length=0;
        while(current!=null){
            current=current.next;
            length++;
        }
        //from left
        
        for(int i=0;i<k-1;i++){
            left=left.next;
             
        }
        //from right
        for (int i = 0; i < length - k; i++) {
            right = right.next;
        }
    

         //swapping logic
        int temp=left.val;
         left.val=right.val;
         right.val=temp;

         return head;


    }
}
